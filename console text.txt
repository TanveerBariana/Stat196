> #1
> #a
> w <- c(45, 7, 5, 8, 11)
> #b
> var(w)
[1] 282.2

> mean(w)
[1] 15.2

> sd(w)
[1] 16.79881

> #c
> w.sq <- w ^ 2
> #d
> sum.w.sq <- sum(w.sq)
> #e
> n <- length(w)
> (1 / (n - 1)) * (sum.w.sq - (n * (mean(w)) ^ 2))
[1] 282.2

> #f
> double.w <- w*2
> mean.double.data <- mean(double.w)
> mean.double.data
[1] 30.4

> sd.double.data <- sd(double.w)
> sd.double.data
[1] 33.59762

> #multiplying it by 2 simply doubles the mean and sd
> mean(w * 4)
[1] 60.8
> sd(w * 4)
[1] 67.19524

> #multiplying the set by a scalar muiltiplies the sd and mean by that scalar 
> #g
> mean.add.5 <- mean(w + 5)
> mean.add.5
[1] 20.2

> sd.add.5 <- sd(w + 5)
> sd.add.5
[1] 16.79881

> #the mean is shifted the scalar amount, sd is unaffected
> 
> #2
> matrix1= t(matrix(c(1,5,3,4,7,9,3,2,9), ncol= 3, nrow= 3))
> #a 
> col3 <- matrix1[ ,3]
> #b
> myelement <- matrix1[3, 2]
> #c
> matrix2 <- matrix(2:5, nrow = 2, ncol= 2)
> #d
> t(matrix1)
     [,1] [,2] [,3]
[1,]    1    4    3
[2,]    5    7    2
[3,]    3    9    9

> t(matrix2)
     [,1] [,2]
[1,]    2    3
[2,]    4    5

> #it creates the transpose
> 
> #3
> mynums <- matrix(c(1, 2, 3, 4), ncol= 2, nrow=2)
> mynames <- c("Ruby", "Miguel", "Tiffany", "Tyler")
> mylist =list(x= mynums, y= mynames)
> #a
> mydet <- det(mylist$x)
> #b
> favename <- mylist$y[3]
> 
> #4
> ?swiss
> #a
> ag.col <- swiss[,2]
> #b
> male.perc.male.ag <- mean(ag.col)
> #c
> row40 <- swiss[40,]
> #d
> summary(swiss)
   Fertility      Agriculture     Examination   
 Min.   :35.00   Min.   : 1.20   Min.   : 3.00  
 1st Qu.:64.70   1st Qu.:35.90   1st Qu.:12.00  
 Median :70.40   Median :54.10   Median :16.00  
 Mean   :70.14   Mean   :50.66   Mean   :16.49  
 3rd Qu.:78.45   3rd Qu.:67.65   3rd Qu.:22.00  
 Max.   :92.50   Max.   :89.70   Max.   :37.00  
   Education        Catholic       Infant.Mortality
 Min.   : 1.00   Min.   :  2.150   Min.   :10.80   
 1st Qu.: 6.00   1st Qu.:  5.195   1st Qu.:18.15   
 Median : 8.00   Median : 15.140   Median :20.00   
 Mean   :10.98   Mean   : 41.144   Mean   :19.94   
 3rd Qu.:12.00   3rd Qu.: 93.125   3rd Qu.:21.70   
 Max.   :53.00   Max.   :100.000   Max.   :26.60   
> 
> #5
> red <- function(x){
+   function1output <- sum(x,sqrt(x))
+   return(function1output)
+ }
> red(14)
[1] 17.74166

> #6
> blue <- function(x, y){
+   function2out<- (x*y)/2
+   return(function2out)
+ } 
> blue(3.7, 4.6)
[1] 8.51

> 
> #7
> yell <- function(x1,y1, x2,y2){
+   ans <- sqrt(((x2-x1)^2)+((y2-y1)^2))
+   return(abs(ans))
+ }
> yell(1,5, -2, 7.4)
[1] 3.841875
